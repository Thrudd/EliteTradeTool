@{
    ViewBag.Title = "Thrudds Elite:Dangerous Tools";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="NavTabs">
    <ul class="nav nav-pills">
        <li class="active" id="ImportInstructionsBtn"><a href="javascript:ShowImportPanel('#ImportInstructions')"><i class="fa fa-info"></i> Instructions</a></li>
        <li id="ImportFormBtn"><a href="javascript:ShowImportPanel('#ImportContainer')"><i class="fa fa-upload"></i> Import Form</a></li>
    </ul>
</div>

<div id="ContentContainer" style="min-height:500px;">
    <div id="ImportInstructions">
        <h4>If you are using ED Market Connector you no longer need to upload CSV's files. Data will be automatically imported from the EDDN so long as you've set it in the options.</h4>
        <img src="/Content/images/EDMCOption.png" style="float:left;margin-right:10px;">
        <p>You will still need to make sure that the station you are importing data for has a record in the database before you upload data. Check the @Html.ActionLink("Admin page", "Index") first.</p>
        <p>You can use the import tab on this page to upload data gathered using other tools into the database. Elite OCR hasn't been updated for Horizons so please check your data carefully if you still use it.</p>

        <p><b>Please note. I did not create the data gathering tools so if you have any questions please contact the tools author directly.</b></p>

@*
    <p>To install EliteOCR <b>extract the downloaded ZIP to a location of your choice</b>. You can double click on the eliteOCR.exe to check if it start. If it doesn't at this point please consult <a href="https://forums.frontier.co.uk/showthread.php?t=68771" target="_blank">this thread</a></p>

    <h3>Settings</h3>
    <p>
        In order for EliteOCR to work we need to do a couple of things.<br />
        <b>Start eliteOCR</b> and goto <b>Settings->Preferences->Paths</b>.
    </p>

    <p>In here you need to point the tool to three directories:</p>

    <ul>
        <li>
            <span><strong>Screenshot directory</strong><br />
            Points to the <b>Elite screenshot folder</b>, which is default set to <b>User's pictures folder -> Frontier Developments -> Elite Dangerous</b> for example `C:/Users/Thrudd/Pictures/Frontier Developments/Elite Dangerous`.<br />
            You can use the <b>browse button</b> of the Screenshot Directory setting to browse to the Elite screenshot folder.</span>
        </li>
        <li>
            <span><strong>Log Directory</strong><br />
            This points to the <b>Elite Dangerous netlog folder</b> default this is set to <b>Elite dangerous install directory (EDlaunch) -> Products -> FORC-FDEV-D-1002 -> logs</b> for example `C:/Program Files (x86)/Frontier/EDLaunch/Products/FORC-FDEV-D-1002/Logs`. A good thing to note is that there are people that claim that the log folder is in the `%localappdata%/Frontier Developments` folder, for me this wasn't te case, but if you can't find it where I did, that is a good place to start looking.</span>
        </li>
        <li>
            <span><strong>Export directory</strong><br />
            Where you'd like the generated csv files to be saved. Just choose somewhere convienent so you can find them when you go to upload them to the site.</span>
        </li>
    </ul>

    <h3>Automation</h3>
    <p>
        Goto <b>Settings->Preferences->General</b> and <b>enable 'Automatically add results with high confidence to the table'</b>.
        This will save everybody alot of time, it makes sure that when it knows almost certain what a given text is, it will automatically add it instead of asking you to check everything.
    </p>

    <p>
        <strong>System name &amp; enabling logging</strong><br />
        This is something which is not well documented, by default Elite doesn't log everything EliteOCR needs. That is why we need to enable <b>verbose logging</b> in the <b>AppConfig.xml</b> which is located in the <b>parental directory of the log directory</b> for example `C:/Program Files (x86)/Frontier/EDLaunch/Products/FORC-FDEV-D-1002/AppConfig.xml`.<br />
        You can <b>open the AppConfig.xml</b> in any <b>editor</b> of your choice (<b>NotePad will do just fine</b>).<br />
        <b>Scroll down</b> or search for <b>'&lt;Network'</b> tag and make sure <b>add 'VerboseLogging="1"'</b><br />
        For example `&lt;Network Port="0" upnpenabled="1" LogFile="netLog" DatestampLog="1" VerboseLogging="1" &gt; &lt;/Network&gt;`
    </p>

    <p>
        An import note is that EliteOCR can only automaticall grab the system name on screenshots taken <b>after</b> VerboseLogging is turned on.<br />
        If EliteOCR cannot find the log it will say so in red text: `System name not found in log files`, to resolve this please see the <b>Log Directory</b> and <b>Enabling Logging</b> sections.
    </p>

    <h3>Screenshots</h3>
    <p>
        You can <b>take a screenshot</b> in Elite Dangerous <b>with</b> the specified key, by default this is <b>F10</b>.<br />
        It is vital that you use screenshots of at least 1920x1080 resolution. To increase resolution beyond your monitor's native resolution, enable DSR (dynamic super resolution) if you have an Nvidia card. If you have an AMD card, enable VSR (virtual super resolution)<br />
        You need to screen cap with NO highlighting. Hover the cursor way off of the commodities list to get rid of the item selection highlighting eliteOCR will ignore/skip the highlighted rows.<br />
        Don't clip a goods row at the bottom of the frame during a screen cap, the OCR will make an attempt to translate it and give you gibberish.<br />
        Be wary of using custom HUD colours as the eliteOCR may not work with certain colour schemes.<br />
        The screenshot will be saved in elite's screenshot directory which you needed to specify in the settings of EliteOCR.<br />
        Make sure that <b>take a screenshot</b> of one of <b>the commodity market</b>. Now open (or alt+tab) to EliteOCR.
    </p>

    <h3>Adding screenshots</h3>
    <p>
        You can either add all screenshots or one at a time. If you <b>press 'Add all' button</b> it will add <b>every screenshot</b> in the given <b>screenshot directory</b>. You can also add them manually wit the green plus button.<br />
        When added you can always remove a screenshot, just select them and press the red minus, or remove everything with the 'remove all' button.
    </p>


    <h3>Retrieving data</h3>
    <p>
        You can either OCR them one at a time or everything at once. <b>Press the 'OCR All'</b> button to that processing the first screenshot.<br />
        Now you can see that it recognizes the commodities and to the right the following buttons light up 'Add', 'Skip'. It asks you whenever or not to add the scanned picture to the results.
    </p>

    <h4>Correcting misread lines</h4>
    <p>
        EliteOCR is pretty smart and will ask you to correct a line when it isn't sure what to make of it. You can see <b>two rows</b> where the <b>top row displays the parts of the picture</b> corresponding with the row it tries to recognize. <b>The bottom row displays what he makes of it</b>, EliteOCR will mark columns it is <b>uncertain</b> about in <b>red or orange</b>. You need to check these manually but of all is good you can <b>press the 'Add'</b> button.<br />
        When you are done with a screenshot the <b>button 'Next file'</b> will lit up and when you press it you can repeat the process for the next file. <b>Every screenshot you process will be added to one table unless you press the 'Clear table' button at the bottom.</b>
    </p>

    <h3>Exporting a csv from EliteOCR</h3>
    <p>When you have processed all screenshots of a single market <b>press the 'Export' button</b> and <b>save the resulting csv</b> where ever you like it. Now you can import the file into the site.</p>

    <h3>Importing the data into the site</h3>
    <p>The import form is accessable from a link at the top of this page. There are a few things to note before importing the data.</p>
    <p>Stations must already exist in the database. Use the admin interface on this site to confirm they exist before attempting to upload data.</p>
    <p>Rare goods will be ignored.</p>
    <p>Imported prices are checked against an allowed range. If you find the importer is rejecting some rows please check the values and if they are correct let me know and I'll adjust the allowed range.</p>

    <h2>Instructions</h2>
    <ul>
        <li><span>Generate a csv file from screenshots using the eliteOCR tool <a href="http://sourceforge.net/projects/eliteocr/" target="_blank">http://sourceforge.net/projects/eliteocr/</a></span></li>
        <li><span>It is vital that you use screenshots of at least 1920x1080 resolution. To increase resolution beyond your monitor's native resolution, enable DSR (dynamic super resolution) if you have an Nvidia card. If you have an AMD card, enable VSR (virtual super resolution)</span></li>
        <li>
            <span>
                You need the system name for the CSV file - if eliteOCR does not automatically get it - enter it before adding the first item and it will add it to every item line after...or you will have to manually add it to every line...which sucks, because the idea is to do less typing.<br />
                To make eliteOCR detect the system name automatically you may need to add VerboseLogging="1" to the Network section of the games appconfig.xml file located in the games directory.
            </span>
        </li>
        <li><span>Be wary of using custom HUD colours as the eliteOCR may not work with certain colour schemes.</span></li>
        <li><span>You need to screen cap with NO highlighting. Hover the cursor way off of the commodities list to get rid of the item selection highlighting eliteOCR will ignore/skip the highlighted rows.</span></li>
        <li><span>Don't clip a goods row at the bottom of the frame during a screen cap, the OCR will make an attempt to translate it and give you gibberish.</span></li>
        <li><span>You can clip or omit the category names (Food, Metals, etc.) during a screen cap. The OCR program ignores them and only the goods names are used in the exported CSV file.</span></li>
        <li><span>On the last (typically bottom of the list) screen cap, don't worry about getting some of the goods a second time. The eliteOCR should delete the doubles, or you can skip them as they pop up.</span></li>
        <li><span>Stations must already exist in the database. Use the admin interface on this site to confirm they exist before attempting to upload data.</span></li>
        <li><span>Rare goods will be ignored.</span></li>
        <li><span>Imported prices are checked against an allowed range. If you find the importer is rejecting some rows please check the values and if they are correct let me know and I'll adjust the allowed range.</span></li>
    </ul>*@
    </div>
    <div id="ImportContainer" class="hidden">
        <div id="ImportForm">
            <h2>Parse Data from CSV</h2>
            <p><strong>You MUST upload complete stations, partial uploads will result in missing data.</strong></p>
            <p>EliteOCR is out of date since Horizons so if you do use it please check your data <strong>very</strong> carefully.</p>
            <div class="form-group">
                @Html.Label("File", "Select file to process:", new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    <input type="file" id="File" name="file" title="Select a CSV File" accept=".csv" />
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-9 col-md-offset-3">
                    <a href="javascript:ParseImport()" class="btn btn-default" style="margin-top:4px;">Parse</a>
                </div>
            </div>
        </div>

        <div id="ImportNotification"></div>
        <div id="ImportResult"></div>
    </div>
</div>


<script id="ImportResultTemplate" type="text/x-jsrender">
    <h2>Import Results</h2>
    {{if StationsFound.length > 0}}
    <h4>Stations found in the database</h4>
    <ul>
        {^{for StationsFound }}
        <li><span>{{:StationName}}</span></li>
        {{/for}}
    </ul>
    {{/if}}

    {{if Updated > 0}}
    <p>Existing commodities updated: {{:Updated}}</p>
    {{/if}}

    {{if Added > 0}}
    <p>New commodities added: {{:Added}}</p>
    {{/if}}

    {{if Deleted > 0}}
    <p>Commodities deleted: {{:Added}}</p>
    {{/if}}

    {{if Skipped > 0}}
    <p>Commodities skipped: {{:Skipped}}<br />
    (Entry in the database was the same/newer or it was cargo in your hold that the station didn't buy)</p>
    {{/if}}
    
    {{if OutOfRange.length > 0}}
    <h4>Values out of accepted range</h4>
    <ul>
        {^{for OutOfRange }}
        <li><span>{{:Station}} - {{:Commodity}} Buy:{{:Buy}} Sell:{{:Sell}} Should be between {{:Range}}</span></li>
        {{/for}}
    </ul>
    <p>Please check the values and if they are correct let me know and I'll adjust the allowed range.</p>
    {{/if}}

    {{if StationsNotFound.length > 0}}
    <h4>Stations not found in the database</h4>
    <ul>
        {^{for StationsNotFound }}
        <li><span>{{:StationName}}</span></li>
        {{/for}}
    </ul>
    {{/if}}

    {{if CommoditiesNotFound.length > 0}}
    <h4>Commodities not found in the database</h4>
    <ul>
        {^{for CommoditiesNotFound }}
        <li><span>{{:CommodityName}}</span></li>
        {{/for}}
    </ul>
    {{/if}}
    <a href="javascript:ShowImportForm()" class="btn btn-default">Show Import Form</a>
</script>

@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/admin")
    <script>
        $(document).ready(function () {
            SetUpImport();
            $('input[type=file]').bootstrapFileInput();
        });
    </script>
}
